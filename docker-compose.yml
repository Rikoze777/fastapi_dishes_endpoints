version: "3.8"

services:
  dishes-app:
    build: .
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      dishes-app-db:
        condition: service_healthy
      dishes-app-redis:
        condition: service_healthy
      rabbitmq-app:
          condition: service_healthy

  dishes-app-test:
    build: .
    command: ["pytest"]
    env_file:
      - .env
    depends_on:
      dishes-app-db:
        condition: service_healthy
      dishes-app-redis:
        condition: service_healthy

  dishes-app-db:
    image: postgres:15.1-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - dishes-app-db-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
      interval: 3s
      timeout: 30s
      retries: 3

  dishes-app-redis:
    image: redis:latest
    volumes:
      - ./redis/data:/data
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 20s
      retries: 100

  rabbitmq-app:
    container_name: rabbitmq
    image: rabbitmq:latest
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    env_file:
      - .env
    ports:
      - "5672:5672"
    volumes:
      - rabbitmq-app-data:/var/lib/rabbitmq
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 5s
      timeout: 10s
      retries: 3

  celery-worker:
    build:
      context: .
    env_file:
      - .env
    command: [ "celery", "--app=app.celery.celery", "worker", "-l", "INFO" ]
    depends_on:
      dishes-app-db:
        condition: service_healthy
      dishes-app-redis:
        condition: service_healthy
      rabbitmq-app:
          condition: service_healthy


  celery-beat:
    build:
      context: .
    env_file:
      - .env
    command: [ "celery", "--app=app.celery.celery", "beat" ]
    depends_on:
      celery-worker:
        condition: service_started

volumes:
  dishes-app-db-data:
  dishes-app-redis:
  rabbitmq-app-data:
